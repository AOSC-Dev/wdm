.TH wdm 1x "July 2002"
.SH NAME
wdm \- WINGs Display Manager
.SH SYNOPSIS
.B wdm [ options ]
.SH DESCRIPTION
\fBwdm\fP is an X display manager based on the original X11 
X Display Manager (xdm).
It features numerous functionality improvements, including the ability
 to reboot or halt the machine (once
the proper password has been supplied) and to select from a list of available
X sessions to start. The look of the login panel is
somewhat configurable, too.
.SH OPTIONS
.PP
Except for \fB\-config\fP, all of these options can be specified as 
resources.
.IP "\fB\-config\fP \fIconfiguration_file\fP"
Names the configuration file, which specifies resources to control
the behavior of \fIwdm\fP. \fI#configdir#/wdm-config\fP is the default.
.IP "\fB\-nodaemon\fP"
Specifies ``false'' as the value for the
\fBDisplayManager.daemonMode\fP resource. This suppresses the normal
daemon behavior, which is for \fIwdm\fP to close all file descriptors,
disassociate itself from the controlling terminal, and put itself in
the background when it first starts up.
.IP "\fB\-debug\fP \fIdebug_level\fP"
Specifies the numeric value for the \fBDisplayManager.debugLevel\fP
resource.  A non-zero value causes \fIwdm\fP to print lots of
debugging statements to the terminal; it also disables the
\fBDisplayManager.daemonMode\fP resource, forcing \fIwdm\fP to run
synchronously.  To interpret these debugging messages, a copy of the
source code for \fIwdm\fP is almost a necessity.  No attempt has been
made to rationalize or standardize the output.
.IP "\fB\-error\fP \fIerror_log_file\fP"
Specifies the value for the \fBDisplayManager.errorLogFile\fP
resource.  This file contains errors from \fIwdm\fP as well as
anything written to stderr by the various scripts and programs run
during the progress of the session.
.IP "\fB\-syslog\fP \fIfacility\fP"
Specifies the value for the \fBDisplayManager.syslogFacility\fP
resource. This is factility to use with all messages if log is
redirected to syslog.
.IP "\fB\-usesyslog\fP"
Specifies ``true'' as the value for the \fBDisplayManager.useSyslog\dP
resource. This will force all messages go to syslog with facility
specified by \fBDisplayManager.syslogFacility\fP resource.
.IP "\fB\-useerrfile\fP"
Specifies ``false'' as the value for the \fBDisplayManager.useSyslog\dP
resource. This will force all messages go to log file
specified by \fBDisplayManager.errorLogFile\fP resource.
.IP "\fB\-resources\fP \fIresource_file\fP"
Specifies the value for the \fBDisplayManager*resources\fP resource.
This file is loaded using \fIxrdb\fP to specify configuration
parameters for the authentication widget.
.IP "\fB\-server\fP \fIserver_entry\fP"
Specifies the value for the \fBDisplayManager.servers\fP resource.
.IP "\fB\-udpPort\fP \fIport_number\fP"
Specifies the value for the \fBDisplayManager.requestPort\fP resource.  This
sets the port-number which
.I wdm
will monitor for XDMCP requests.  As XDMCP
uses the registered well-known UDP port 177, this resource should
not be changed except for debugging. If set to 0 wdm will not listen
for XDMCP or Chooser requests.
.IP "\fB\-session\fP \fIsession_program\fP"
Specifies the value for the \fBDisplayManager*session\fP resource.
This indicates the program to run as the session after the user has
logged in.
.IP "\fB\-xrm\fP \fIresource_specification\fP"
Allows an arbitrary resource to be specified, as in most X Toolkit
applications.
.SH RESOURCES
.PP
At many stages the actions of
.I wdm
can be controlled through the use of its configuration file, which is in the
X resource format.
Some resources modify the behavior of
.I wdm
on all displays,
while others modify its behavior on a single display.  Where actions relate
to a specific display,
the display name is inserted into the resource name between
``DisplayManager'' and the final resource name segment.
.PP
For local displays, the resource name and class are as read from the
\fIXservers\fP file.
.PP
For remote displays, the resource name is what the network address of
the display resolves to.  See the \fBremoveDomain\fP resource.  The
name must match exactly; \fIwdm\fP is not aware of
all the network aliases that might reach a given display.
If the name resolve fails, the address is
used.  The resource class is as sent by the display in the XDMCP
Manage request.
.PP
Because the resource
manager uses colons to separate the name of the resource from its value and
dots to separate resource name parts,
.I wdm
substitutes underscores for both dots and colons when generating the resource
name.
For example, \fBDisplayManager.expo_x_org_0.startup\fP is the name of the 
resource which defines the startup shell file for the ``expo.x.org:0'' display.
.\"
.IP "\fBDisplayManager.servers\fP"
This resource either specifies a file name full of server entries, one per
line (if the value starts with a slash), or a single server entry.
See the section \fBLocal Server Specification\fP for the details.
.IP "\fBDisplayManager.requestPort\fP"
This indicates the UDP port number which
.I wdm
uses to listen for incoming XDMCP requests.  Unless you need to debug the
system, leave this with its default value of 177.
.IP "\fBDisplayManager.errorLogFile\fP"
Error output is normally directed at the system console.  To redirect it,
set this resource to a file name.  A method to send these messages to
.I syslog
should be developed for systems which support it; however, the
wide variety of interfaces precludes any system-independent
implementation.  This file also contains any output directed to stderr
by the \fIXsetup, Xstartup, Xsession\fP and \fIXreset\fP files,
so it will contain descriptions
of problems in those scripts as well.
.IP "\fBDisplayManager.debugLevel\fP"
If the integer value of this resource is greater than zero,
reams of
debugging information will be printed.  It also disables daemon mode, which
would redirect the information into the bit-bucket, and
allows non-root users to run
.I wdm,
which would normally not be useful.
.IP "\fBDisplayManager.daemonMode\fP"
Normally,
.I wdm
attempts to make itself into a daemon process unassociated with any terminal.
This is
accomplished by forking and leaving the parent process to exit, then closing
file descriptors and releasing the controlling terminal.  In some
environments this is not desired (in particular, when debugging).  Setting
this resource to ``false'' will disable this feature.
.IP "\fBDisplayManager.pidFile\fP"
The filename specified will be created to contain an ASCII
representation of the process-id of the main
.I wdm
process.
.I Xdm
also uses file locking on this file
to attempt to eliminate multiple daemons running on
the same machine, which would cause quite a bit of havoc.
.IP "\fBDisplayManager.lockPidFile\fP"
This is the resource which controls whether
.I wdm
uses file locking to keep multiple display managers from running amok.
On System V, this
uses the \fIlockf\fP library call, while on BSD it uses \fIflock.\fP
.IP "\fBDisplayManager.authDir\fP"
This names a directory under which
.I wdm
stores authorization files while initializing the session.  The
default value is \fI#configdir#.\fP
Can be overridden for specific displays by
DisplayManager.\fIDISPLAY\fP.authFile.
.IP \fBDisplayManager.autoRescan\fP
This boolean controls whether
.I wdm
rescans the configuration, servers, access control and authentication keys
files after a session terminates and the files have changed.  By default it
is ``true.''  You can force
.I wdm
to reread these files by sending a SIGHUP to the main process.
.IP "\fBDisplayManager.removeDomainname\fP"
When computing the display name for XDMCP clients, the name resolver will
typically create a fully qualified host name for the terminal.  As this is
sometimes confusing,
.I wdm
will remove the domain name portion of the host name if it is the same as the
domain name of the local host when this variable is set.  By default the
value is ``true.''
.IP "\fBDisplayManager.keyFile\fP"
XDM-AUTHENTICATION-1 style XDMCP authentication requires that a private key
be shared between
.I wdm
and the terminal.  This resource specifies the file containing those
values.  Each entry in the file consists of a display name and the shared
key.  By default,
.I wdm
does not include support for XDM-AUTHENTICATION-1, as it requires DES which
is not generally distributable because of United States export restrictions.
.IP \fBDisplayManager.accessFile\fP
To prevent unauthorized XDMCP service and to allow forwarding of XDMCP
IndirectQuery requests, this file contains a database of hostnames which are
either allowed direct access to this machine, or have a list of hosts to
which queries should be forwarded to.  The format of this file is described
in the section
.B "XDMCP Access Control."
.IP \fBDisplayManager.exportList\fP
A list of additional environment variables, separated by white space,
to pass on to the \fIXsetup\fP,
\fIXstartup\fP, \fIXsession\fP, and \fIXreset\fP programs.
.IP \fBDisplayManager.randomFile\fP
A file to checksum to generate the seed of authorization keys.
This should be a file that changes frequently.
The default is \fI/dev/mem\fP.
.IP \fBDisplayManager.greeterLib\fP
On systems that support a dynamically-loadable greeter library, the
name of the library.  The default is
\fI/usr/lib/X11/xdm/libXdmGreet.so\fP.
.I This not used in Debian.
.IP \fBDisplayManager.choiceTimeout\fP
Number of seconds to wait for display to respond after user has
selected a host from the chooser.  If the display sends an XDMCP
IndirectQuery within this time, the request is forwarded to the chosen
host.  Otherwise, it is assumed to be from a new session and the
chooser is offered again.
Default is 15.
.IP \fBDisplayManager.sourceAddress\fP
Use the numeric IP address of the incoming connection on multihomed hosts
instead of the host name. This is to avoid trying to connect on the wrong
interface which might be down at this time.
.IP \fBDisplayManager.willing\fP
This specifies a program which is run (as) root when an an XDMCP
BroadcastQuery is received and this host is configured to offer XDMCP
display management. The output of this program may be displayed on a chooser
window.  If no program is specified, the string \fIWilling to manage\fP is
sent.
.PP
.\"
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.resources\fP"
This resource specifies the name of the file to be loaded by \fIxrdb\fP
as the resource database onto the root window of screen 0 of the display.
The \fIXsetup\fP program, the Login widget, and \fIchooser\fP will use
the resources set in this file.
This resource data base is loaded just before the authentication procedure
is started, so it can control the appearance of the login window.  See the
section
.B "Authentication Widget,"
which describes the various
resources that are appropriate to place in this file.
There is no default value for this resource, but
\fI#configdir#/Xresources\fP
is the conventional name.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.chooser\fP"
Specifies the program run to offer a host menu for Indirect queries
redirected to the special host name CHOOSER.
\fI/usr/X11R6/bin/chooser\fP is the default.
See the sections \fBXDMCP Access Control\fP and \fBChooser\fP.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.xrdb\fP"
Specifies the program used to load the resources.  By default,
.I wdm
uses \fI/usr/X11R6/bin/xrdb\fP.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.cpp\fP"
This specifies the name of the C preprocessor which is used by \fIxrdb\fP.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.setup\fP"
This specifies a program which is run (as root) before offering the
Login window.  This may be used to change the appearance of the screen
around the Login window or to put up other windows (e.g., you may want
to run \fIxconsole\fP here).
By default, no program is run.  The conventional name for a
file used here is \fIXsetup\fP.
See the section \fBSetup Program.\fP
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.startup\fP"
This specifies a program which is run (as root) after the authentication
process succeeds.  By default, no program is run.  The conventional name for a
file used here is \fIXstartup\fP.
See the section \fBStartup Program.\fP
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.session\fP"
This specifies the session to be executed (not running as root).
By default, \fI/usr/X11R6/bin/xterm\fP is
run.  The conventional name is \fIXsession\fP.
See the section
.B "Session Program."
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.reset\fP"
This specifies a program which is run (as root) after the session terminates.
By default, no program is run.
The conventional name is \fIXreset\fP.
See the section
.B "Reset Program."
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.openDelay\fP"
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.openRepeat\fP"
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.openTimeout\fP"
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.startAttempts\fP"
These numeric resources control the behavior of
.I wdm
when attempting to open intransigent servers.  \fBopenDelay\fP is
the length of the
pause (in seconds) between successive attempts, \fBopenRepeat\fP is the
number of attempts to make, \fBopenTimeout\fP is the amount of time
to wait while actually
attempting the open (i.e., the maximum time spent in the
.IR connect (2)
system call) and \fBstartAttempts\fP is the number of times this entire process
is done before giving up on the server.  After \fBopenRepeat\fP attempts have been made,
or if \fBopenTimeout\fP seconds elapse in any particular attempt,
.I wdm
terminates and restarts the server, attempting to connect again.
This
process is repeated \fBstartAttempts\fP times, at which point the display is
declared dead and disabled.  Although
this behavior may seem arbitrary, it has been empirically developed and
works quite well on most systems.  The default values are
5 for \fBopenDelay\fP, 5 for \fBopenRepeat\fP, 30 for \fBopenTimeout\fP and
4 for \fBstartAttempts\fP.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.pingInterval\fP"
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.pingTimeout\fP"
To discover when remote displays disappear,
.I wdm
occasionally pings them, using an X connection and \fIXSync\fP
calls.  \fBpingInterval\fP specifies the time (in minutes) between each
ping attempt, \fBpingTimeout\fP specifies the maximum amount of time (in
minutes) to wait for the terminal to respond to the request.  If the
terminal does not respond, the session is declared dead and terminated.  By
default, both are set to 5 minutes.  If you frequently use X terminals which
can become isolated from the managing host, you may wish to increase this
value.  The only worry is that sessions will continue to exist after the
terminal has been accidentally disabled.
.I wdm
will not ping local displays.  Although it would seem harmless, it is
unpleasant when the workstation session is terminated as a result of the
server hanging for NFS service and not responding to the ping.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.terminateServer\fP"
This boolean resource specifies whether the X server should be terminated
when a session terminates (instead of resetting it).  This option can be
used when the server tends to grow without bound over time, in order to limit
the amount of time the server is run.  The default value is ``false.''
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.userPath\fP"
.I Xdm
sets the PATH environment variable for the session to this value.  It should
be a colon separated list of directories; see
.IR sh (1)
for a full description.
``:/bin:/usr/bin:/usr/X11R6/bin:/usr/ucb''
is a common setting.
The default value can be specified at build time in the X system
configuration file with DefaultUserPath.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.systemPath\fP"
.I Xdm
sets the PATH environment variable for the startup and reset scripts to the
value of this resource.  The default for this resource is specified
at build time by the DefaultSystemPath entry in the system configuration file;
``/etc:/bin:/usr/bin:/usr/X11R6/bin:/usr/ucb'' is a common choice.
Note the absence of ``.'' from this entry.  This is a good practice to
follow for root; it avoids many common Trojan Horse system penetration
schemes.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.systemShell\fP"
.I Xdm
sets the SHELL environment variable for the startup and reset scripts to the
value of this resource.  It is \fI/bin/sh\fP by default.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.failsafeClient\fP"
If the default session fails to execute,
.I wdm
will fall back to this program.  This program is executed with no
arguments, but executes using the same environment variables as
the session would have had (see the section \fBSession Program\fP).
By default, \fI/usr/X11R6/bin/xterm\fP is used.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.grabServer\fP"
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.grabTimeout\fP"
To improve security,
.I wdm
grabs the server and keyboard while reading the login name and password.
The
\fBgrabServer\fP resource specifies if the server should be held for the
duration of the name/password reading.  When ``false,'' the server is ungrabbed
after the keyboard grab succeeds, otherwise the server is grabbed until just
before the session begins.  The default is ``false.''
The \fBgrabTimeout\fP resource specifies the maximum time
.I wdm
will wait for the grab to succeed.  The grab may fail if some other
client has the server grabbed, or possibly if the network latencies
are very high.  This resource has a default value of 3 seconds; you
should be cautious when raising it, as a user can be spoofed by a
look-alike window on the display.  If the grab fails,
.I wdm
kills and restarts the server (if possible) and the session.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.authorize\fP"
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.authName\fP"
\fBauthorize\fP is a boolean resource which controls whether
.I wdm
generates and uses authorization for the local server connections.  If
authorization is used, \fBauthName\fP is a list
of authorization mechanisms to use, separated by white space.
XDMCP connections dynamically specify which
authorization mechanisms are supported, so
\fBauthName\fP is ignored in this case.  When \fBauthorize\fP is set for a
display and authorization is not available, the user is informed by having a
different message displayed in the login widget.  By default, \fBauthorize\fP
is ``true.''  \fBauthName\fP is ``MIT-MAGIC-COOKIE-1,'' or, if
XDM-AUTHORIZATION-1 is available, ``XDM-AUTHORIZATION-1\0MIT-MAGIC-COOKIE-1.''
.IP \fBDisplayManager.\fP\fIDISPLAY\fP\fB.authFile\fP
This file is used to communicate the authorization data from
.I wdm
to the server, using the \fB\-auth\fP server command line option.
It should be
kept in a directory which is not world-writable as it could easily be
removed, disabling the authorization mechanism in the server.
If not specified, a name is generated from DisplayManager.authDir and
the name of the display.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.authComplain\fP"
If set to ``false,'' disables the use of the \fBunsecureGreeting\fP
in the login window.
See the section \fBAuthentication Widget.\fP
The default is ``true.''
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.resetSignal\fP"
The number of the signal \fIwdm\fP sends to reset the server.
See the section \fBControlling the Server.\fP
The default is 1 (SIGHUP).
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.termSignal\fP"
The number of the signal \fIwdm\fP sends to terminate the server.
See the section \fBControlling the Server.\fP
The default is 15 (SIGTERM).
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.resetForAuth\fP"
The original implementation of authorization in the sample server reread the
authorization file at server reset time, instead of when checking the
initial connection.  As
.I wdm
generates the authorization information just before connecting to the
display, an old server would not get up-to-date authorization information.
This resource causes
.I wdm
to send SIGHUP to the server after setting up the file, causing an
additional server reset to occur, during which time the new authorization
information will be read.
The default is ``false,'' which will work for all MIT servers.
.IP "\fBDisplayManager.\fP\fIDISPLAY\fP\fB.userAuthDir\fP"
When
.I wdm
is unable to write to the usual user authorization file ($HOME/.Xauthority),
it creates a unique file name in this directory and points the environment
variable XAUTHORITY at the created file.  It uses \fI/tmp\fP by default.
.IP "\fBDisplayManager.wdmLogin\fP"
Specifies the path to \fIwdmLogin\fP(1x)
.IP "\fBDisplayManager.wdmWm\fP"
Is a colon separated list of window managers to use as options in the
login panel. Note that if you include the path to the window manager,
it will look \fIugly\fP. You may set this resource to None if you want
only NoChange to appear.
.IP "\fBDisplayManager.wdmLogo\fP"
Path to the logo pixmap, several formats are accepted, read
\fIwdmLogin\fP(1x) to find out more.
.IP "\fBDisplayManager.wdmHelpFile\fP"
Path to a text file which will be displayed in the help panel, read
\fIwdmLogin\fP(1x) to find out more.
.IP "\fBDisplayManager.wdmDefaultUser\fP"
a default username which will be used if no username is typed.
.IP "\fBDisplayManager.wdmDefaultPasswd\fP" 
the clear text password of the default user above. BE VERY CAREFUL
when using this two resources, and don't forget to do:
chmod 600 wdm-config ; chown root.root wdm-config
.IP "\fBDisplayManager.wdmBg\fP"
Background specification. Read the 
.B BACKGROUND IMAGE SPECIFICATION
section to find out about the format.
If this is not specified, then the background is \fBnot\fP set.
.IP "\fBDisplayManager.wdmReboot\fP"
Reboot command.
.IP "\fBDisplayManager.wdmHalt\fP"
Halt command.
.IP "\fBDisplayManager.wdmVerify\fP"
If true, verify user's identity for reboot/halt/exit.
.IP "\fBDisplayManager.wdmRoot\fP"
If true, user must be root to exit.
.IP "\fBDisplayManager.wdmAnimations\fP"
If true, enable animations consisting of shaking the panel (if an
error) and rolling up the panel (when closing it).  If false,
animations are disabled.
.IP "\fBDisplayManager.wdmLocale\fP"
LANG environment variable will be set to value of this resource
before starting wdmLogin.
.IP "\fBDisplayManger.wdmCursorTheme\fP"
If you have recent version of XFree with support for transparent
cursors you can select cursor theme to use on login panel.
XCURSOR_THEME environment variable will be set to value of this
resource before starting wdmLogin.
.IP "\fBDisplayManager.wdmSequentialXServerLaunch\fP"
If true, launch multiple X servers sequentially to avoid system
hangup. (Slower. but safer. See http://www.altlinux.org/X11/DualSeat.)
Otherwise launch multiple X servers in parallel (default).
.SH "CONFIGURATION FILE"
The default location of the 
.I wdm
configuration file is \fI#configdir#/wdm-config\fP
.LP
Here is a reasonable configuration file, which could be
named \fIwdm-config\fP:
.nf

.ta .5i 4i

	DisplayManager.servers:	/usr/X11R6/lib/X11/xdm/Xservers
	DisplayManager.errorLogFile:	/usr/X11R6/lib/X11/xdm/xdm-errors
	DisplayManager*resources:	/usr/X11R6/lib/X11/xdm/Xresources
	DisplayManager*startup:	/usr/X11R6/lib/X11/xdm/Xstartup
	DisplayManager*session:	/usr/X11R6/lib/X11/xdm/Xsession
	DisplayManager.pidFile:	/usr/X11R6/lib/X11/xdm/xdm-pid
	DisplayManager._0.authorize:	true
	DisplayManager*authorize:	false

.fi
.PP
Note that this file mostly contains references to other files.  Note also
that some of the resources are specified with ``*'' separating the
components.  These resources can be made unique for each different display,
by replacing the ``*'' with the display-name, but normally this is not very
useful.  See the \fBResources\fP section for a complete discussion.
If the entry is a host name, all comparisons are done using
network addresses, so any name which converts to the correct network address
may be used.
For patterns, only canonical host names are used
in the comparison, so ensure that you do not attempt to match
aliases.
Preceding either a host name or a pattern with a `!' character
causes hosts which
match that entry to be excluded.
.PP
To only respond to Direct queries for a host or pattern,
it can be followed by the optional ``NOBROADCAST'' keyword.
This can be used to prevent an wdm server from appearing on
menus based on Broadcast queries.
.PP
An Indirect entry also contains a host name or pattern,
but follows it with a list of
host names or macros to which indirect queries should be sent.
.PP
A macro definition contains a macro name and a list of host names and
other macros that
the macro expands to.  To distinguish macros from hostnames, macro
names start with a `%' character.  Macros may be nested.
.PP
Indirect entries
may also specify to have \fIwdm\fP run \fIchooser\fP to offer a menu
of hosts to connect to.  See the section \fBChooser\fP.
.PP
When checking access for a particular display host, each entry is scanned in
turn and the first matching entry determines the response.  Direct and
Broadcast
entries are ignored when scanning for an Indirect entry and vice-versa.
.PP
Blank lines are ignored, `#' is treated as a comment
delimiter causing the rest of that line to be ignored,
and `\e\fInewline\fP'
causes the newline to be ignored, allowing indirect host lists to span
multiple lines.
.PP
Here is an example Xaccess file:
.LP
.ta 2i 4i
.nf
#
# Xaccess \- XDMCP access control file
#

#
# Direct/Broadcast query entries
#

!xtra.lcs.mit.edu	# disallow direct/broadcast service for xtra
bambi.ogi.edu	# allow access from this particular display
*.lcs.mit.edu	# allow access from any display in LCS

*.deshaw.com	NOBROADCAST	# allow only direct access
*.gw.com			# allow direct and broadcast

#
# Indirect query entries
#

%HOSTS	expo.lcs.mit.edu xenon.lcs.mit.edu \\
	excess.lcs.mit.edu kanga.lcs.mit.edu

extract.lcs.mit.edu	xenon.lcs.mit.edu	#force extract to contact xenon
!xtra.lcs.mit.edu	dummy	#disallow indirect access
*.lcs.mit.edu	%HOSTS	#all others get to choose
.fi
.SH RESOURCES FILE
The \fIXresources\fP file is 
loaded onto the display as a resource database using
.I xrdb.
As the authentication
widget reads this database before starting up, it usually contains
parameters for that widget:
.nf
.ta .5i 1i

	xlogin*login.translations: #override\\
		Ctrl<Key>R: abort-display()\\n\\
		<Key>F1: set-session-argument(failsafe) finish-field()\\n\\
		<Key>Return: set-session-argument() finish-field()
	xlogin*borderWidth: 3
	xlogin*greeting: CLIENTHOST
\&	#ifdef COLOR
	xlogin*greetColor: CadetBlue
	xlogin*failColor: red
\&	#endif

.fi
.PP
Please note the translations entry; it specifies
a few new translations for the widget which allow users to escape from the
default session (and avoid troubles that may occur in it).  Note that if
\&#override is not specified, the default translations are removed and replaced
by the new value, not a very useful result as some of the default translations
are quite useful (such as ``<Key>: insert-char ()'' which responds to normal
typing).
.PP
This file may also contain resources for the setup program and \fIchooser\fP.
.SH "SETUP PROGRAM"
The \fIXsetup\fP file is run after
the server is reset, but before the Login window is offered.
The file is typically a shell script.
It is run as root, so should be careful about security.
This is the place to change the root background or bring up other
windows that should appear on the screen along with the Login widget.
.PP
In addition to any specified by \fBDisplayManager.exportList\fP,
the following environment variables are passed:
.nf
.ta .5i 2i

	DISPLAY	the associated display name
	PATH	the value of \fBDisplayManager.\fP\fIDISPLAY\fP\fB.systemPath\fP
	SHELL	the value of \fBDisplayManager.\fP\fIDISPLAY\fP\fB.systemShell\fP
	XAUTHORITY	may be set to an authority file
.fi
.PP
Note that since \fIwdm\fP grabs the keyboard, any other windows will not be
able to receive keyboard input.  They will be able to interact with
the mouse, however; beware of potential security holes here.
If \fBDisplayManager.\fP\fIDISPLAY\fP\fB.grabServer\fP is set,
\fIXsetup\fP will not be able to connect
to the display at all.
Resources for this program
can be put into the file named by
\fBDisplayManager.\fP\fIDISPLAY\fP\fB.resources\fP.
.PP
Here is a sample \fIXsetup\fP script:
.nf

\&	#!/bin/sh
\&	# Xsetup_0 \- setup script for one workstation
	xcmsdb < /usr/X11R6/lib/monitors/alex.0
	xconsole\0\-geometry\0480x130\-0\-0\0\-notify\0\-verbose\0\-exitOnFail &

.fi
.SH BACKGROUND IMAGE SPECIFICATION
There are several possible ways of specifing a background image. The
generic format is \fItype\fP:\fIimage\fP. \fItype\fP can be any of:
.TP
.B none
The backgound is \fBnot\fP set.
.TP
.B solid
it renders a solid backgroud, and \fIimage\fP is a color name
.TP
\fBhgradient\fP, \fBvgradient\fP, \fBdgradient\fP
a gradient (either horizontal, vertical or diagonal) will be
rendered. \fIimage\fP is \fBcomma separated\fP of color names, and any
number of colors can be specified.
.TP
\fBpixmap\fP
a pixmap will be used for the background. \fIimage\fP is the full path
to an image file (tiff, png, jpeg and xpm allowed) and it will be
scaled to use the full screen.
.SH SEE ALSO
\fBwdmLogin\fP(1x)
.SH AUTHOR
wdm was written by Gene Czarcinski <genec@mindspring.com>. wdm is
based on work by Tom Rothamel and xdm, (c) 1988 X Consortium
.PP
This man page was written by Marcelo Magallon
<mmagallo@debian.org> and extensively modified by Noah 
Meyerhans <noahm@debian.org>.  Much of the content was taken from
xdm's manual page.
